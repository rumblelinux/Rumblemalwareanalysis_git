import re
import base64

def string_analysis(file_path):
    values = []
    results = []

    with open(file_path, 'rb') as f:
        content = f.read()

    strings = re.findall(b'[ -~]{4,}', content)

    for string in strings:
        string = string.decode('utf-8', 'ignore')

        # Initialize details dictionary for each string
        details = {}

        # URLs
        urls = re.findall(r'https?://[^\s<>"]+|www\.[^\s<>"]+', string)
        if urls:
            details["source"] = "Suspicious URL"
            details["danger"] = "Could communicate with malicious server"
            details["string"] = urls
            results.append(details)
            values.extend(urls)

        # IP addresses
        ip_addresses = re.findall(r'\b(?:\d{1,3}\.){3}\d{1,3}\b|\b(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4}\b', string)
        if ip_addresses:
            details = {"source": "Suspicious IP address", "danger": "Could communicate with malicious IP", "string": ip_addresses}
            results.append(details)
            values.extend(ip_addresses)

        # Registry keys
        registry_keys = re.findall(r'HKEY_[A-Za-z0-9_/\\]+', string)
        if registry_keys:
            details = {"source": "Remarkable registry keys", "danger": "Registry key could change by malware", "string": registry_keys}
            results.append(details)
            values.extend(registry_keys)

        # Email addresses
        emails = re.findall(r'[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+', string)
        if emails:
            details = {"source": "Suspicious emails", "danger": "May found something worthy from this email", "string": emails}
            results.append(details)
            values.extend(emails)

        # File paths
        file_paths = re.findall(r'[A-Za-z]:(\\[^:"><|?*\x00-\xFF]*)+', string)
        if file_paths:
            details = {"source": "Suspicious location path", "danger": "May expose new creation files", "string": file_paths}
            results.append(details)
            values.extend(file_paths)

        # Other regex checks
        keywords = re.findall(r'password|login|apikey|key|secret|credential|database', string)
        if keywords:
            details = {"source": "Sensitive keyword", "danger": "May expose authentication details", "string": keywords}
            results.append(details)
            values.extend(keywords)
        
        # Base64
        base64_strings = re.findall(r'^[A-Za-z0-9+/]+=*$', string)
        if base64_strings:
            try:
                decoded = base64.b64decode(base64_strings[0])
                details = {"source": "Base64 encoded string", "danger": "May contain encrypted or obfuscated data", "string": base64_strings}
                results.append(details)
                values.append(base64_strings[0])
            except Exception as e:
                pass

        # Hex
        hex_strings = re.findall(r'^[A-Fa-f0-9]+$', string) 
        if hex_strings:
            try:
                decoded = bytes.fromhex(hex_strings[0].decode('utf-8'))
                details = {"source": "Hex encoded string", "danger": "May contain encrypted or obfuscated data", "string": hex_strings}
                results.append(details)
                values.append(hex_strings[0])
            except Exception as e:
                pass


    for result in results:
        print(f"Suspicious string found: {result['string']}")
        print(f"\t- Source: {result['source']}")
        print(f"\t- Potential danger: {result['danger']}")

    print("\nUseful string values: ", list(set(values)))
    return list(set(values))
