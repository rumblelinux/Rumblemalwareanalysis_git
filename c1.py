import pefile
import re

def is_packed(pe):
    packers = {
        "UPX": b"UPX",
        "ASPack": b"ASPack",
        "FSG": b"FSG!",
        "PECompact": b"PECompact",
        "PELock": b"PolyCrypt",
        "PESpin": b"PESpin",
        "Petite": b"petite",
        "NullsoftInstaller": b"Nullsoft",
        "InstallShield": b"IsdBnu",
        "MPRESS": b"MPRESS",
        "WWPack32": b"WWPack32",
        "MEW": b"MEW",
        "Upack": b"Upack",
        "nPack": b"NPackScrembledByNachtRachter",
        "Y0da Cryptor": b"Y0da's Cryptor",
        "EXECryptor": b"EXECryptor",
        "JDPack": b"JD-Pack",
        "EXEStealth": b"EXEstealth",
        "Molebox": b"Molebox",
        "RLPack": b"RL!",
        "PENGBuild": b"PENG",
    }

    for section in pe.sections:
        data = section.get_data()
        for packer_name, packer_sig in packers.items():
            if packer_sig in data:
                return f"Packed with {packer_name}"

    # Check for section names indicating packing
    section_names = [section.Name.decode().rstrip('\x00') for section in pe.sections]
    for packer_name in ["UPX", "ASPack", "FSG", "PELock", "EXECryptor", "JDPack", "RLPack", "PENGBuild", "EXEStealth", "PECompact","WWPack32", "PESpin", "Y0da Cryptor", "Petite", "NullsoftInstaller", "Upack", "InstallShield", "MEW","MPRESS", "Molebox"]:
        for section_name in section_names:
            if packer_name.lower() in section_name.lower():
                return f"Packed with {packer_name}"

    # Check for suspicious entry point
    ep = pe.OPTIONAL_HEADER.AddressOfEntryPoint
    ep_data = pe.get_memory_mapped_image()[ep:ep+64]
    if b"\xE9" in ep_data or b"\xEB" in ep_data:
        return "Possibly packed (suspicious entry point)"

    return "Not packed"

def check_file(file_path):
    try:
        pe = pefile.PE(file_path)
        pack_result = is_packed(pe)
        print(f"{file_path}: {pack_result}")
    except pefile.PEFormatError:
        print(f"{file_path} is not a valid PE file.")

